template<typename T>
void selectionSort(T arr[], int n)
{
	for (int i = 0; i < n; i++) {
		int minIndex = i;
		for (int j = i + 1; j < n; j++)
			if (arr[j] < arr[minIndex])
				minIndex = j;
		swap(arr[i], arr[minIndex]);
	}
}

template<typename T>
void insertionSort(T arr[],int n)
{
	/*for (int i = 1; i < n; i++)
		for (int j = i; j > 0; j--)
			if (arr[j] < arr[j-1])
				swap(arr[j], arr[i]);
			else
				break;*/
	for (int i = 1; i < n; i++) {
		T e = arr[i];
		int j;
		for (j = i; j > 0 && arr[j-1]>e; j--)
			arr[j]= arr[j - 1];
		arr[j] = e;
	}
}

template<typename T>
void bubbleSort(T arr[],int n)
{
	for(int i=n-1;i>=0;i--)
	{
		T e = arr[0];
		for (int j = 0; j < i; j++)//改进  取代消耗性能高的swap 改用合乎规则的赋值
			if (e > arr[j + 1])
				arr[j] = arr[j + 1];
			else if(e<arr[j+1]){
				arr[j] = e;
				e = arr[j + 1];
			}
	}
}


template<typename T>
void shellSort(T arr[],int n)
{	
	for(int gap = n / 2;gap>0;gap=gap/2)
		for(int i=gap;i<n;i++)
		{
			T e = arr[i];
			int j;
			for (j = i; j >= gap&&arr[j - gap] > e; j -= gap)
					arr[j] = arr[j - gap];
			arr[j] = e;
		}

}
